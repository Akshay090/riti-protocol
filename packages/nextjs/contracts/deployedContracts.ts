/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  31337: {
    RitiProtocol: {
      address: "0x8A791620dd6260079BF849Dc5567aDC3F2FdC318",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "lastUpdated",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "startTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "refreshCount",
                  type: "uint256",
                },
                {
                  internalType: "enum RitiProtocol.RefreshFrequency",
                  name: "frequency",
                  type: "uint8",
                },
                {
                  components: [
                    {
                      internalType: "string",
                      name: "platformName",
                      type: "string",
                    },
                  ],
                  internalType: "struct RitiProtocol.PlatformConfig",
                  name: "platformConfig",
                  type: "tuple",
                },
              ],
              internalType: "struct RitiProtocol.Config",
              name: "_config",
              type: "tuple",
            },
          ],
          name: "createRiti",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_id",
              type: "uint256",
            },
          ],
          name: "getRiti",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "id",
                  type: "uint256",
                },
                {
                  components: [
                    {
                      internalType: "string",
                      name: "platformUsername",
                      type: "string",
                    },
                    {
                      internalType: "address",
                      name: "userAddress",
                      type: "address",
                    },
                  ],
                  internalType: "struct RitiProtocol.UserInfo[]",
                  name: "userInfo",
                  type: "tuple[]",
                },
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "lastUpdated",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "startTime",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "refreshCount",
                      type: "uint256",
                    },
                    {
                      internalType: "enum RitiProtocol.RefreshFrequency",
                      name: "frequency",
                      type: "uint8",
                    },
                    {
                      components: [
                        {
                          internalType: "string",
                          name: "platformName",
                          type: "string",
                        },
                      ],
                      internalType: "struct RitiProtocol.PlatformConfig",
                      name: "platformConfig",
                      type: "tuple",
                    },
                  ],
                  internalType: "struct RitiProtocol.Config",
                  name: "config",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "enum RitiProtocol.Status",
                      name: "status",
                      type: "uint8",
                    },
                    {
                      internalType: "uint256",
                      name: "amount",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct RitiProtocol.State",
                  name: "state",
                  type: "tuple",
                },
              ],
              internalType: "struct RitiProtocol.Riti",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "userAddress",
              type: "address",
            },
          ],
          name: "getUserRitis",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "id",
                  type: "uint256",
                },
                {
                  components: [
                    {
                      internalType: "string",
                      name: "platformUsername",
                      type: "string",
                    },
                    {
                      internalType: "address",
                      name: "userAddress",
                      type: "address",
                    },
                  ],
                  internalType: "struct RitiProtocol.UserInfo[]",
                  name: "userInfo",
                  type: "tuple[]",
                },
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "lastUpdated",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "startTime",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "refreshCount",
                      type: "uint256",
                    },
                    {
                      internalType: "enum RitiProtocol.RefreshFrequency",
                      name: "frequency",
                      type: "uint8",
                    },
                    {
                      components: [
                        {
                          internalType: "string",
                          name: "platformName",
                          type: "string",
                        },
                      ],
                      internalType: "struct RitiProtocol.PlatformConfig",
                      name: "platformConfig",
                      type: "tuple",
                    },
                  ],
                  internalType: "struct RitiProtocol.Config",
                  name: "config",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "enum RitiProtocol.Status",
                      name: "status",
                      type: "uint8",
                    },
                    {
                      internalType: "uint256",
                      name: "amount",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct RitiProtocol.State",
                  name: "state",
                  type: "tuple",
                },
              ],
              internalType: "struct RitiProtocol.Riti[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_id",
              type: "uint256",
            },
            {
              components: [
                {
                  internalType: "string",
                  name: "platformUsername",
                  type: "string",
                },
                {
                  internalType: "address",
                  name: "userAddress",
                  type: "address",
                },
              ],
              internalType: "struct RitiProtocol.UserInfo",
              name: "_userInfo",
              type: "tuple",
            },
          ],
          name: "joinRiti",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "ritis",
          outputs: [
            {
              internalType: "uint256",
              name: "id",
              type: "uint256",
            },
            {
              components: [
                {
                  internalType: "uint256",
                  name: "lastUpdated",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "startTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "refreshCount",
                  type: "uint256",
                },
                {
                  internalType: "enum RitiProtocol.RefreshFrequency",
                  name: "frequency",
                  type: "uint8",
                },
                {
                  components: [
                    {
                      internalType: "string",
                      name: "platformName",
                      type: "string",
                    },
                  ],
                  internalType: "struct RitiProtocol.PlatformConfig",
                  name: "platformConfig",
                  type: "tuple",
                },
              ],
              internalType: "struct RitiProtocol.Config",
              name: "config",
              type: "tuple",
            },
            {
              components: [
                {
                  internalType: "enum RitiProtocol.Status",
                  name: "status",
                  type: "uint8",
                },
                {
                  internalType: "uint256",
                  name: "amount",
                  type: "uint256",
                },
              ],
              internalType: "struct RitiProtocol.State",
              name: "state",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "userRitis",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
